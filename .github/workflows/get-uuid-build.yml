name: get-uuid-build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  # Set location for vcpkg install
  VCPKG_ROOT: ~/.vcpkg

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install vcpkg
      run: |
        git clone https://github.com/microsoft/vcpkg ${{env.VCPKG_ROOT}}
        sh ${{env.VCPKG_ROOT}}/bootstrap-vcpkg.sh
        ${{env.VCPKG_ROOT}}/vcpkg --version
        echo "${{env.VCPKG_ROOT}}" >> $GITHUB_PATH
        env

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        printf "'vcpkg' version is: "
        ${{env.VCPKG_ROOT}}/vcpkg --version
        printf "Runing cmake build...\n"
        cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build

    - name: Exec
      # Exec the built application
      run: |
        ${{github.workspace}}/bin/get-uuid -v
        ${{github.workspace}}/bin/get-uuid
        ${{github.workspace}}/bin/get-uuid -n 6
        ${{github.workspace}}/bin/get-uuid -j -n 6
        ${{github.workspace}}/bin/get-uuid -h

    #- name: Test
      #working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      #run: ctest -C ${{env.BUILD_TYPE}}
      
